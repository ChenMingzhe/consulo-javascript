<!--
  - Copyright 2013-2015 must-be.org
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
  -->

<idea-plugin>
	<extensions defaultExtensionNs="com.intellij">
		<!-- Numbers -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.number.JSConvertIntegerToDecimalIntention</className>
			<categoryKey>plugin.category.numbers</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.number.JSConvertIntegerToHexIntention</className>
			<categoryKey>plugin.category.numbers</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.number.JSConvertIntegerToOctalIntention</className>
			<categoryKey>plugin.category.numbers</categoryKey>
		</intentionAction>

		<!-- Boolean -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.bool.JSDeMorgansLawIntention</className>
			<categoryKey>plugin.category.boolean</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.bool.JSRemoveBooleanEqualityIntention</className>
			<categoryKey>plugin.category.boolean</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.bool.JSNegateComparisonIntention</className>
			<categoryKey>plugin.category.boolean</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.bool.JSFlipComparisonIntention</className>
			<categoryKey>plugin.category.boolean</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.bool.JSFlipConjunctionIntention</className>
			<categoryKey>plugin.category.boolean</categoryKey>
		</intentionAction>

		<!-- Conditional -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.conditional.JSFlipConditionalIntention</className>
			<categoryKey>plugin.category.conditional</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.conditional.JSFlipIfIntention</className>
			<categoryKey>plugin.category.conditional</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.conditional.JSReplaceConditionalWithIfIntention</className>
			<categoryKey>plugin.category.conditional</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSReplaceIfWithConditionalIntention</className>
			<categoryKey>plugin.category.conditional</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.conditional.JSRemoveConditionalIntention</className>
			<categoryKey>plugin.category.conditional</categoryKey>
		</intentionAction>

		<!-- Shift -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.number.JSReplaceMultiplyWithShiftIntention</className>
			<categoryKey>plugin.category.shift</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.number.JSReplaceShiftWithMultiplyIntention</className>
			<categoryKey>plugin.category.shift</categoryKey>
		</intentionAction>


		<!-- Declaration -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.initialization.JSMergeDeclarationAndInitializationIntention</className>
			<categoryKey>plugin.category.declaration</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.initialization.JSSplitDeclarationAndInitializationIntention</className>
			<categoryKey>plugin.category.declaration</categoryKey>
		</intentionAction>

		<!-- Comments -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.comment.JSChangeToCStyleCommentIntention</className>
			<categoryKey>plugin.category.comments</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.comment.JSChangeToEndOfLineCommentIntention</className>
			<categoryKey>plugin.category.comments</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.comment.JSMoveCommentToSeparateLineIntention</className>
			<categoryKey>plugin.category.comments</categoryKey>
		</intentionAction>

		<!-- Control Flow -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSSplitElseIfIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSMergeElseIfIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSMergeIfAndIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSMergeIfOrIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSMergeParallelIfsIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSSplitIfAndIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSSplitIfOrIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.switchtoif.JSReplaceSwitchWithIfIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.switchtoif.JSReplaceIfWithSwitchIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSSimplifyIfElseIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.trivialif.JSRemoveRedundantElseIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.loop.JSMergeParallelForLoopsIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.loop.JSMergeParallelForInLoopsIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.braces.JSAddBracesIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.braces.JSRemoveBracesIntention</className>
			<categoryKey>plugin.category.control-flow</categoryKey>
		</intentionAction>

		<!-- Other -->
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.parenthesis.JSRemoveUnnecessaryParenthesesIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.string.JSJoinConcatenatedStringLiteralsIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.opassign.JSReplaceWithOperatorAssignmentIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.string.JSSingleToDoubleQuotedStringIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.string.JSDoubleToSingleQuotedStringIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.constant.JSConstantExpressionIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.constant.JSConstantSubexpressionIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>
		<intentionAction>
			<className>org.intellij.idea.lang.javascript.intention.increment.JSExtractIncrementIntention</className>
			<categoryKey>plugin.category.other</categoryKey>
		</intentionAction>

	</extensions>
</idea-plugin>